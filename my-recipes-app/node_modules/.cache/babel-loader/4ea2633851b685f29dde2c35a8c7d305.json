{"ast":null,"code":"var _jsxFileName = \"/Users/sergioguevaraconvers/recipe-keeper-app/src/components/UpdateRecipe/UpdateRecipeSection.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport AddIngredient from \"../AddIngredient\";\nimport { updateRecipe } from \"../../store/actions/recipeAction\";\nimport \"./UpdateRecipeSection.css\";\n\nclass UpdateRecipe extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const recipeId = this.props.match.params.id;\n      this.props.updateRecipe(recipeId, this.state);\n      this.props.history.push(\"/\");\n    };\n\n    this.addIngredientToList = newIngredient => {\n      newIngredient.id = this.state.ingredients.length + 1;\n      this.setState({\n        ingredients: this.state.ingredients.concat(newIngredient)\n      });\n    };\n\n    this.deleteIngredient = id => {\n      let ingredients = this.state.ingredients.filter(item => {\n        return item.id !== id;\n      });\n      this.setState({\n        ingredients: ingredients\n      });\n    };\n\n    const recipe = this.props.recipe;\n    this.state = {\n      title: recipe.title,\n      preparation: recipe.preparation,\n      preptime: recipe.preptime,\n      cooktime: recipe.cooktime,\n      servings: recipe.servings,\n      ingredients: recipe.ingredients\n    };\n  }\n\n  render() {\n    const ingredients = this.state.ingredients;\n    const listOfIngredients = ingredients.map(item => {\n      return React.createElement(\"div\", {\n        className: \"ingredient-chip\",\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ingredient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, item.ingredient), React.createElement(\"span\", {\n        className: \"closebtn\",\n        onClick: () => {\n          this.deleteIngredient(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"\\xD7\"));\n    });\n    return React.createElement(\"article\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"save\",\n      id: \"update\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"save\")), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Update Recipe\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      onChange: this.handleChange,\n      value: this.state.title,\n      \"aria-describedby\": \"required field\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Recipe Title\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"preparation\",\n      onChange: this.handleChange,\n      value: this.state.preparation,\n      \"aria-describedby\": \"required field\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"preparation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Preparation\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"time\",\n      id: \"preptime\",\n      onChange: this.handleChange,\n      value: this.state.preptime,\n      \"aria-describedby\": \"required field\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"preptime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Preparation Time (Hours:Minutes)\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"time\",\n      id: \"cooktime\",\n      onChange: this.handleChange,\n      value: this.state.cooktime,\n      \"aria-describedby\": \"requiredfield\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"cooktime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Cook Time (Hours:Minutes)\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      min: \"1\",\n      id: \"servings\",\n      onChange: this.handleChange,\n      value: this.state.servings,\n      \"aria-describedby\": \"value must be greater than or equal to 1\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"servings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Servings\"))), React.createElement(AddIngredient, {\n      addIngredientToList: this.addIngredientToList.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, listOfIngredients));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const recipes = state.firestore.data.recipes;\n  const recipe = recipes ? recipes[id] : null;\n  return {\n    recipe: recipe\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateRecipe: (recipeId, recipe) => dispatch(updateRecipe(recipeId, recipe))\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect([{\n  collection: \"recipes\"\n}]))(UpdateRecipe);","map":{"version":3,"sources":["/Users/sergioguevaraconvers/recipe-keeper-app/src/components/UpdateRecipe/UpdateRecipeSection.js"],"names":["React","Component","connect","firestoreConnect","compose","AddIngredient","updateRecipe","UpdateRecipe","constructor","props","handleChange","event","setState","target","id","value","handleSubmit","preventDefault","recipeId","match","params","state","history","push","addIngredientToList","newIngredient","ingredients","length","concat","deleteIngredient","filter","item","recipe","title","preparation","preptime","cooktime","servings","render","listOfIngredients","map","ingredient","bind","mapStateToProps","ownProps","recipes","firestore","data","mapDispatchToProps","dispatch","collection"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAAQC,YAAR,QAA2B,kCAA3B;AACA,OAAO,2BAAP;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACjCO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAYlBC,YAZkB,GAYFC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AACV,SAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,GAAoBH,KAAK,CAACE,MAAN,CAAaE;AADvB,OAAd;AAGH,KAhBiB;;AAAA,SAiBlBC,YAjBkB,GAiBFL,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACM,cAAN;AACA,YAAMC,QAAQ,GAAG,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,MAAjB,CAAwBN,EAAzC;AACA,WAAKL,KAAL,CAAWH,YAAX,CAAwBY,QAAxB,EAAiC,KAAKG,KAAtC;AACA,WAAKZ,KAAL,CAAWa,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,KAtBiB;;AAAA,SAuBlBC,mBAvBkB,GAuBKC,aAAD,IAAmB;AACrCA,MAAAA,aAAa,CAACX,EAAd,GAAmB,KAAKO,KAAL,CAAWK,WAAX,CAAuBC,MAAvB,GAA8B,CAAjD;AACA,WAAKf,QAAL,CAAc;AACZc,QAAAA,WAAW,EAAE,KAAKL,KAAL,CAAWK,WAAX,CAAuBE,MAAvB,CAA8BH,aAA9B;AADD,OAAd;AAGH,KA5BiB;;AAAA,SA6BlBI,gBA7BkB,GA6BEf,EAAD,IAAO;AACtB,UAAIY,WAAW,GAAG,KAAKL,KAAL,CAAWK,WAAX,CAAuBI,MAAvB,CAA8BC,IAAI,IAAI;AACpD,eAAOA,IAAI,CAACjB,EAAL,KAAYA,EAAnB;AACH,OAFiB,CAAlB;AAGA,WAAKF,QAAL,CAAc;AACVc,QAAAA,WAAW,EAAEA;AADH,OAAd;AAGH,KApCiB;;AAAA,UAEPM,MAFO,GAEE,KAAKvB,KAFP,CAEPuB,MAFO;AAGd,SAAKX,KAAL,GAAY;AACRY,MAAAA,KAAK,EAAED,MAAM,CAACC,KADN;AAERC,MAAAA,WAAW,EAAEF,MAAM,CAACE,WAFZ;AAGRC,MAAAA,QAAQ,EAAEH,MAAM,CAACG,QAHT;AAIRC,MAAAA,QAAQ,EAAEJ,MAAM,CAACI,QAJT;AAKRC,MAAAA,QAAQ,EAAEL,MAAM,CAACK,QALT;AAMRX,MAAAA,WAAW,EAAEM,MAAM,CAACN;AANZ,KAAZ;AAQH;;AA0BDY,EAAAA,MAAM,GAAG;AACT,UAAMZ,WAAW,GAAG,KAAKL,KAAL,CAAWK,WAA/B;AACA,UAAMa,iBAAiB,GAAGb,WAAW,CAACc,GAAZ,CAAiBT,IAAI,IAAI;AAC/C,aACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,GAAG,EAAEA,IAAI,CAACjB,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BiB,IAAI,CAACU,UAAlC,CADJ,EAEI;AAAM,QAAA,SAAS,EAAC,UAAhB;AAA2B,QAAA,OAAO,EAAE,MAAI;AAAC,eAAKZ,gBAAL,CAAsBE,IAAI,CAACjB,EAA3B;AAA+B,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ;AAMH,KAPyB,CAA1B;AAQI,WACA;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKE,YAArB;AAAmC,MAAA,SAAS,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,EAAE,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAA8B,MAAA,QAAQ,EAAE,KAAKN,YAA7C;AAA2D,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWY,KAA7E;AAAoF,0BAAiB,gBAArG;AAAsH,MAAA,QAAQ,MAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CANJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAU,MAAA,EAAE,EAAC,aAAb;AAA2B,MAAA,QAAQ,EAAE,KAAKvB,YAA1C;AAAwD,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWa,WAA1E;AAAuF,0BAAiB,gBAAxG;AAAyH,MAAA,QAAQ,MAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CAVJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,UAAtB;AAAiC,MAAA,QAAQ,EAAE,KAAKxB,YAAhD;AAA8D,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWc,QAAhF;AAA0F,0BAAiB,gBAA3G;AAA4H,MAAA,QAAQ,MAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFJ,CAdJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,UAAtB;AAAiC,MAAA,QAAQ,EAAE,KAAKzB,YAAhD;AAA8D,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWe,QAAhF;AAA0F,0BAAiB,eAA3G;AAA2H,MAAA,QAAQ,MAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFJ,CAlBJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,GAAG,EAAC,GAAzB;AAA6B,MAAA,EAAE,EAAC,UAAhC;AAA2C,MAAA,QAAQ,EAAE,KAAK1B,YAA1D;AAAwE,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWgB,QAA1F;AAAoG,0BAAiB,0CAArH;AAAgK,MAAA,QAAQ,MAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAtBJ,CADJ,EA4BI,oBAAC,aAAD;AAAe,MAAA,mBAAmB,EAAE,KAAKb,mBAAL,CAAyBkB,IAAzB,CAA8B,IAA9B,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BJ,EA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMH,iBAAN,CA7BJ,CADA;AAiCH;;AAjFgC;;AAmFrC,MAAMI,eAAe,GAAG,CAACtB,KAAD,EAAQuB,QAAR,KAAqB;AAEzC,QAAM9B,EAAE,GAAG8B,QAAQ,CAACzB,KAAT,CAAeC,MAAf,CAAsBN,EAAjC;AACA,QAAM+B,OAAO,GAAGxB,KAAK,CAACyB,SAAN,CAAgBC,IAAhB,CAAqBF,OAArC;AACA,QAAMb,MAAM,GAAGa,OAAO,GAAGA,OAAO,CAAC/B,EAAD,CAAV,GAAiB,IAAvC;AACA,SAAO;AACHkB,IAAAA,MAAM,EAAGA;AADN,GAAP;AAGH,CARD;;AASA,MAAMgB,kBAAkB,GAAIC,QAAD,IAAc;AAErC,SAAO;AACH3C,IAAAA,YAAY,EAAE,CAACY,QAAD,EAAWc,MAAX,KAAsBiB,QAAQ,CAAC3C,YAAY,CAACY,QAAD,EAAWc,MAAX,CAAb;AADzC,GAAP;AAGH,CALD;;AAOA,eAAe5B,OAAO,CAClBF,OAAO,CAACyC,eAAD,EAAkBK,kBAAlB,CADW,EAElB7C,gBAAgB,CAAC,CACb;AAAE+C,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAFE,CAAP,CAKb3C,YALa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from \"react-redux\"\nimport {firestoreConnect} from \"react-redux-firebase\"\nimport {compose} from \"redux\"\nimport AddIngredient from \"../AddIngredient\"\nimport {updateRecipe} from \"../../store/actions/recipeAction\"\nimport \"./UpdateRecipeSection.css\"\n\nclass UpdateRecipe extends Component {\n    constructor(props){\n        super(props);\n        const {recipe}= this.props;\n        this.state= {\n            title: recipe.title,\n            preparation: recipe.preparation,\n            preptime: recipe.preptime,\n            cooktime: recipe.cooktime,\n            servings: recipe.servings,\n            ingredients: recipe.ingredients\n        }\n    }\n    handleChange = (event) => {\n        this.setState({\n            [event.target.id] : event.target.value\n        })   \n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const recipeId = this.props.match.params.id;\n        this.props.updateRecipe(recipeId,this.state)\n        this.props.history.push(\"/\");\n    } \n    addIngredientToList = (newIngredient) => {\n        newIngredient.id = this.state.ingredients.length+1;\n        this.setState({\n          ingredients: this.state.ingredients.concat(newIngredient)\n        }) \n    }\n    deleteIngredient = (id) =>{\n        let ingredients = this.state.ingredients.filter(item => {\n            return item.id !== id\n        });\n        this.setState({\n            ingredients: ingredients\n        })\n    }\n    render() {\n    const ingredients = this.state.ingredients\n    const listOfIngredients = ingredients.map( item => {\n        return (\n            <div className=\"ingredient-chip\" key={item.id} >\n                <div className=\"ingredient\">{item.ingredient}</div>\n                <span className=\"closebtn\" onClick={()=>{this.deleteIngredient(item.id)}}>&times;</span>\n            </div>\n        )\n    })\n        return (\n        <article className=\"container\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n                <div>\n                    <button className=\"save\" id=\"update\">save</button>\n                </div>\n                <h5>Update Recipe</h5>\n                <br/>\n                <div>\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange} value={this.state.title} aria-describedby=\"required field\" required/>\n                    <label htmlFor=\"title\">Recipe Title</label>\n                </div>\n                <div>\n                    <textarea id=\"preparation\" onChange={this.handleChange} value={this.state.preparation} aria-describedby=\"required field\" required/>\n                    <label htmlFor=\"preparation\">Preparation</label>\n                </div>\n                <div>\n                    <input type=\"time\" id=\"preptime\" onChange={this.handleChange} value={this.state.preptime} aria-describedby=\"required field\" required/>\n                    <label htmlFor=\"preptime\">Preparation Time (Hours:Minutes)</label>\n                </div>\n                <div>\n                    <input type=\"time\" id=\"cooktime\" onChange={this.handleChange} value={this.state.cooktime} aria-describedby=\"requiredfield\" required/>\n                    <label htmlFor=\"cooktime\">Cook Time (Hours:Minutes)</label>\n                </div>\n                <div>\n                    <input type=\"number\" min=\"1\" id=\"servings\" onChange={this.handleChange} value={this.state.servings} aria-describedby=\"value must be greater than or equal to 1\" required/>\n                    <label htmlFor=\"servings\">Servings</label>\n                </div>\n            </form>\n            <AddIngredient addIngredientToList={this.addIngredientToList.bind(this)}/>\n            <div>{listOfIngredients}</div>\n        </article>\n        )\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n\n    const id = ownProps.match.params.id;\n    const recipes = state.firestore.data.recipes;\n    const recipe = recipes ? recipes[id] : null\n    return {\n        recipe : recipe\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    \n    return {\n        updateRecipe: (recipeId, recipe) => dispatch(updateRecipe(recipeId, recipe))\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    firestoreConnect([\n        { collection: \"recipes\"}\n    ])\n)(UpdateRecipe);\n\n"]},"metadata":{},"sourceType":"module"}