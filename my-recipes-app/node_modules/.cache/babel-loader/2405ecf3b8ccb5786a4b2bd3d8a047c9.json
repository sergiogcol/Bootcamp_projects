{"ast":null,"code":"import _objectSpread from \"/Users/sergioguevaraconvers/recipe-keeper-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport const createRecipe = recipe => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection(\"recipes\").add(_objectSpread({}, recipe, {\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId\n    })).then(() => {\n      dispatch({\n        type: \"CREATE_RECIPE\",\n        recipe: recipe\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"CREATE_RECIPE_ERROR\",\n        error\n      });\n    });\n  };\n};\nexport const deleteRecipe = recipe => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection(\"recipes\").doc(recipe).delete().then(() => {\n      dispatch({\n        type: \"DELETE_RECIPE\",\n        recipe: recipe\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"DELETE_RECIPE_ERROR\",\n        error\n      });\n    });\n  };\n};\nexport const updateRecipe = (recipeId, recipe) => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection(\"recipes\").doc(recipeId).update(_objectSpread({}, recipe)).then(() => {\n      dispatch({\n        type: \"UPDATE_RECIPE\",\n        recipe: recipe\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"UPDATE_RECIPE_ERROR\",\n        error\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/sergioguevaraconvers/recipe-keeper-app/src/store/actions/recipeAction.js"],"names":["createRecipe","recipe","dispatch","getState","getFirebase","getFirestore","firestore","profile","firebase","authorId","auth","uid","collection","add","authorFirstName","firstName","authorLastName","lastName","then","type","catch","error","deleteRecipe","doc","delete","updateRecipe","recipeId","update"],"mappings":";AACA,OAAO,MAAMA,YAAY,GAAIC,MAAD,IAAY;AAEpC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAArB,KAAqD;AAExD,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACA,UAAME,OAAO,GAAGJ,QAAQ,GAAGK,QAAX,CAAoBD,OAApC;AACA,UAAME,QAAQ,GAAGN,QAAQ,GAAGK,QAAX,CAAoBE,IAApB,CAAyBC,GAA1C;AACAL,IAAAA,SAAS,CAACM,UAAV,CAAqB,SAArB,EAAgCC,GAAhC,mBACOZ,MADP;AAEIa,MAAAA,eAAe,EAACP,OAAO,CAACQ,SAF5B;AAGIC,MAAAA,cAAc,EAACT,OAAO,CAACU,QAH3B;AAIIR,MAAAA,QAAQ,EAAEA;AAJd,QAKGS,IALH,CAKQ,MAAM;AACVhB,MAAAA,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAE,eAAR;AAAyBlB,QAAAA,MAAM,EAAEA;AAAjC,OAAD,CAAR;AACH,KAPD,EAOGmB,KAPH,CAOUC,KAAD,IAAS;AACdnB,MAAAA,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAE,qBAAR;AAA+BE,QAAAA;AAA/B,OAAD,CAAR;AACH,KATD;AAUH,GAfD;AAgBH,CAlBM;AAoBP,OAAO,MAAMC,YAAY,GAAIrB,MAAD,IAAY;AAEpC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAArB,KAAqD;AAExD,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACM,UAAV,CAAqB,SAArB,EAAgCW,GAAhC,CAAoCtB,MAApC,EAA4CuB,MAA5C,GAAqDN,IAArD,CAA0D,MAAM;AAC5DhB,MAAAA,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAE,eAAR;AAAyBlB,QAAAA,MAAM,EAAEA;AAAjC,OAAD,CAAR;AACH,KAFD,EAEGmB,KAFH,CAEUC,KAAD,IAAS;AACdnB,MAAAA,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAE,qBAAR;AAA+BE,QAAAA;AAA/B,OAAD,CAAR;AACH,KAJD;AAKH,GARD;AASH,CAXM;AAaP,OAAO,MAAMI,YAAY,GAAG,CAACC,QAAD,EAAWzB,MAAX,KAAsB;AAE9C,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAArB,KAAqD;AAExD,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACM,UAAV,CAAqB,SAArB,EAAgCW,GAAhC,CAAoCG,QAApC,EAA8CC,MAA9C,mBACO1B,MADP,GAEGiB,IAFH,CAEQ,MAAM;AACVhB,MAAAA,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAE,eAAR;AAAyBlB,QAAAA,MAAM,EAAEA;AAAjC,OAAD,CAAR;AACH,KAJD,EAIGmB,KAJH,CAIUC,KAAD,IAAS;AACdnB,MAAAA,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAE,qBAAR;AAA+BE,QAAAA;AAA/B,OAAD,CAAR;AACH,KAND;AAOH,GAVD;AAWH,CAbM","sourcesContent":["\nexport const createRecipe = (recipe) => {\n    \n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n       \n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection(\"recipes\").add({\n            ...recipe,\n            authorFirstName:profile.firstName,\n            authorLastName:profile.lastName,\n            authorId: authorId,\n        }).then(() => {\n            dispatch({ type: \"CREATE_RECIPE\", recipe: recipe}) \n        }).catch((error)=>{\n            dispatch({ type: \"CREATE_RECIPE_ERROR\", error})\n        })\n    }\n};\n\nexport const deleteRecipe = (recipe) => {\n    \n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n       \n        const firestore = getFirestore();\n        firestore.collection(\"recipes\").doc(recipe).delete().then(() => {\n            dispatch({ type: \"DELETE_RECIPE\", recipe: recipe}) \n        }).catch((error)=>{\n            dispatch({ type: \"DELETE_RECIPE_ERROR\", error})\n        })\n    }\n};\n\nexport const updateRecipe = (recipeId, recipe) => {\n    \n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n       \n        const firestore = getFirestore();\n        firestore.collection(\"recipes\").doc(recipeId).update({\n            ...recipe\n        }).then(() => {\n            dispatch({ type: \"UPDATE_RECIPE\", recipe: recipe}) \n        }).catch((error)=>{\n            dispatch({ type: \"UPDATE_RECIPE_ERROR\", error})\n        })\n    }\n};\n"]},"metadata":{},"sourceType":"module"}